-- ‚úÖ Auto AFK Join Script - S·∫µn s√†ng cho autoexec ho·∫∑c loadstring
-- T·ªëi ∆∞u delay & x·ª≠ l√Ω l·ªói module ch∆∞a load

task.wait(2) -- Cho executor v√† game c√≥ th·ªùi gian inject script

repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players.LocalPlayer

setfpscap(10) -- Gi·ªõi h·∫°n FPS khi AFK ƒë·ªÉ gi·∫£m t√†i nguy√™n m√°y

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

print("[üîÉ] ƒêang ch·ªù load ButtonsModule...")

-- Load an to√†n ButtonsModule t·ª´ SharedModules
local ButtonsModule
local success, err = pcall(function()
	local SharedModules = ReplicatedStorage:WaitForChild("SharedModules", 30)
	if SharedModules then
		ButtonsModule = require(SharedModules:WaitForChild("ButtonsModule", 30))
	end
end)

if not success or not ButtonsModule then
	warn("[‚ùå] Kh√¥ng th·ªÉ load ButtonsModule:", err or "Kh√¥ng r√µ l·ªói")
	return
end

print("[‚úÖ] ƒê√£ load ButtonsModule th√†nh c√¥ng.")

-- H√†m v√†o khu AFK
local function JoinAfk()
	local ok, err = pcall(function()
		ButtonsModule.AfkTpButtons("Yes")
	end)

	if ok then
		print("[‚úÖ] ƒê√£ v√†o khu AFK th√†nh c√¥ng.")
	else
		warn("[‚ö†Ô∏è] L·ªói khi v√†o khu AFK:", err)
	end
end

-- V√≤ng l·∫∑p ki·ªÉm tra v√† t·ª± join l·∫°i khu AFK n·∫øu c·∫ßn
task.spawn(function()
	while true do
		JoinAfk()
		task.wait(15) -- Ki·ªÉm tra l·∫°i m·ªói 15 gi√¢y
	end
end)
