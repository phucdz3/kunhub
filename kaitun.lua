-- ‚úÖ Auto AFK Join Script - AFK th√¥ng minh (ch·ªâ v√†o 1 l·∫ßn, ki·ªÉm tra li√™n t·ª•c)
repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players.LocalPlayer

local player = game.Players.LocalPlayer

-- Ch·ªù c√°c th√†nh ph·∫ßn c·∫ßn thi·∫øt
repeat task.wait() until player:FindFirstChild("PlayerGui")
repeat task.wait() until game:FindFirstChild("ReplicatedStorage")
repeat task.wait() until game.ReplicatedStorage:FindFirstChild("SharedModules")

setfpscap(10)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ButtonsModule

-- üîÑ ƒê·ª£i ButtonsModule load
for i = 5, 60 do
	local shared = ReplicatedStorage:FindFirstChild("SharedModules")
	local btnModule = shared and shared:FindFirstChild("ButtonsModule")

	if btnModule then
		local success, result = pcall(require, btnModule)
		if success and result then
			ButtonsModule = result
			print("[‚úÖ] ƒê√£ load ButtonsModule.")
			break
		end
	end

	if i % 5 == 0 then
		print("[‚è≥] ƒêang ch·ªù ButtonsModule... (" .. i .. "/60)")
	end
	task.wait(1)
end

if not ButtonsModule then
	warn("[‚ùå] Kh√¥ng th·ªÉ load ButtonsModule. H√£y ch·∫Øc ch·∫Øn b·∫°n ƒëang ·ªü ƒë√∫ng game!")
	return
end

-- ‚úÖ H√†m v√†o khu AFK
local function JoinAfk()
	local ok, err = pcall(function()
		ButtonsModule.AfkTpButtons("Yes")
	end)

	if ok then
		print("[‚úÖ] ƒê√£ v√†o khu AFK th√†nh c√¥ng.")
	else
		warn("[‚ö†Ô∏è] L·ªói khi v√†o khu AFK:", err)
	end
end

-- üîç H√†m ki·ªÉm tra xem ng∆∞·ªùi ch∆°i c√≤n ·ªü khu AFK kh√¥ng
local function IsInAfkZone()
	local afkAttr = player:GetAttribute("InAfkZone")
	return afkAttr == true
end

-- ‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu: V√†o khu AFK 1 l·∫ßn
JoinAfk()

-- ‚è± Theo d√µi: N·∫øu b·ªã out th√¨ v√†o l·∫°i
task.spawn(function()
	while true do
		task.wait(10)

		local inAfk = false
		pcall(function()
			inAfk = IsInAfkZone()
		end)

		if not inAfk then
			warn("[‚ö†Ô∏è] Ph√°t hi·ªán ƒë√£ out kh·ªèi khu AFK. ƒêang v√†o l·∫°i...")
			JoinAfk()
		end
	end
end)
